{"version":3,"file":"component---src-components-post-js-c41a6386f7cdecef9607.js","mappings":"iPAgCA,MA9BwBA,KACtB,MAAMC,GAAaC,EAAAA,EAAAA,QAAO,MAqB1B,OAnBAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,SAASC,cAAc,UAW1CC,OAAOC,QATkB,CACvBC,IAAK,gCACLC,KAAM,gCACN,aAAc,WACdC,MAAO,eACPC,YAAa,YACbC,OAAO,IAGwBC,SAAQC,IAAmB,IAAjBC,EAAKC,GAAMF,EACpDX,EAAWc,aAAaF,EAAKC,EAAM,IAGrChB,EAAWkB,QAAQC,YAAYhB,EAAW,GACzC,IAGDiB,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAAA,MAAIC,UAAU,SACdD,EAAAA,cAAA,OAAKE,IAAKtB,IACN,ECIV,MA1Bac,IAA+D,IAA5DS,MAAM,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,EAAMC,eAAgBC,IAAQd,EACpE,OACEM,EAAAA,cAACS,EAAAA,EAAM,KACLT,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAA,OAAKC,UAAU,iDACbD,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAQC,UAAU,iBAChBD,EAAAA,cAAA,MAAIC,UAAU,oEACXO,EAAKE,YAAYC,OAEpBX,EAAAA,cAAA,QACEY,SAAUJ,EAAKE,YAAYG,KAC3BZ,UAAU,yDACVD,EAAAA,cAAA,QAAMC,UAAU,uCAChBD,EAAAA,cAAA,QAAMC,UAAU,QAAQO,EAAKE,YAAYG,QAG7Cb,EAAAA,cAAA,OAAKC,UAAU,aAAaa,wBAAyB,CAAEC,OAAQP,EAAKQ,SAEtEhB,EAAAA,cAACrB,EAAQ,QAGN,EAMN,MAAMsC,EAAOC,IAIQ,IAHLf,MACEI,eAAgBC,IAEnBU,EACpB,OACElB,EAAAA,cAACmB,EAAAA,EAAG,CACFR,MAAOH,EAAKE,YAAYC,MACxBS,YAAaZ,EAAKE,YAAYU,aAAeZ,EAAKa,SAClD,C","sources":["webpack://gatsby-starter-blog/./src/components/comments.js","webpack://gatsby-starter-blog/./src/components/post.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\"\n\nexport const Comments = () => {\n  const commentRef = useRef(null);\n\n  useEffect(() => {\n    const utterances = document.createElement('script');\n\n    const utterancesConfig = {\n      src: 'https://utteranc.es/client.js',\n      repo: 'WHITEPAEK/whitepaek.github.io',\n      'issue-term': 'pathname',\n      theme: 'github-light',\n      crossorigin: 'anonymous',\n      async: true,\n    };\n\n    Object.entries(utterancesConfig).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    commentRef.current.appendChild(utterances);\n  }, []);\n\n  return (\n    <div className=\"pt-12\">\n      <hr className=\"my-0\" />\n      <div ref={commentRef} />\n    </div>\n  )\n}\n\nexport default Comments","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\nimport Comments from \"./comments\"\n\nconst Post = ({ data: { previous, next, site, markdownRemark: post } }) => {\n  return (\n    <Layout>\n      <div className=\"xl:relative\">\n        <div className=\"mx-auto max-w-4xl px-6 sm:px-1 py-24 sm:py-32\">\n          <article>\n            <header className=\"flex flex-col\">\n              <h1 className=\"mt-6 text-4xl font-bold tracking-tight text-zinc-800 sm:text-5xl\">\n                {post.frontmatter.title}\n              </h1>\n              <time\n                dateTime={post.frontmatter.date}\n                className=\"order-first flex items-center text-base text-zinc-400\">\n                <span className=\"h-4 w-0.5 rounded-full bg-zinc-200\" />\n                <span className=\"ml-3\">{post.frontmatter.date}</span>\n              </time>\n            </header>\n            <div className=\"mt-8 prose\" dangerouslySetInnerHTML={{ __html: post.html }}></div>\n          </article>\n          <Comments />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const Head = ({\n                       data: {\n                         markdownRemark: post\n                       }\n                     }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"names":["Comments","commentRef","useRef","useEffect","utterances","document","createElement","Object","entries","src","repo","theme","crossorigin","async","forEach","_ref","key","value","setAttribute","current","appendChild","React","className","ref","data","previous","next","site","markdownRemark","post","Layout","frontmatter","title","dateTime","date","dangerouslySetInnerHTML","__html","html","Head","_ref2","Seo","description","excerpt"],"sourceRoot":""}